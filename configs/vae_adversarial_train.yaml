# VAE with Adversarial Training Configuration

# Model configuration
model:
  type: VAEWithAdversarial
  data_preprocessor:
    type: DataPreprocessor
  vae_config:
    in_channels: 3
    out_channels: 3
    down_block_types:
      - DownEncoderBlock2D
      - DownEncoderBlock2D
      - DownEncoderBlock2D
      - DownEncoderBlock2D
    up_block_types:
      - UpDecoderBlock2D
      - UpDecoderBlock2D
      - UpDecoderBlock2D
      - UpDecoderBlock2D
    block_out_channels: [64, 128, 256, 256]
    latent_channels: 4
    layers_per_block: 2
    act_fn: silu
    downsample_padding: 0
    mid_block_add_attention: true
    scaling_factor: 0.1828
    force_upcast: true
    sample_size: 256
  disc_config:
    in_channels: 3
    down_block_types:
      - DownDiscBlock2D
      - DownDiscBlock2D
      - DownDiscBlock2D
      - DownDiscBlock2D
    block_out_channels: [64, 128, 256, 512]
    layers_per_block: 2
    add_attention: true
    attention_head_dim: 8
    norm_num_groups: 32
    act_fn: silu
    sample_size: 256

data:
  # Training dataloader configuration
  train_dataloader:
    dataset:
      data_root: datasets/ffhq/ffhq_imgs/ffhq_256
      type: SingleImageDataset  # Changed to match the class import
      data_prefix:
        gt: ''
      pipeline:
        - type: LoadImageFromFile
          key: gt
        - type: Crop
          keys: [gt]
          crop_size: [256, 256]
          is_pad_zeros: true
          random_crop: false
        - type: PackInputs
    batch_size: 16
    num_workers: 4
    persistent_workers: true
    sampler:
      type: DefaultSampler
      shuffle: true

  # Validation dataloader configuration
  val_dataloader:
    dataset:
      data_root: datasets/img_align_celeba/random_subset
      type: SingleImageDataset  # Changed to match the class import
      data_prefix:
        gt: ''
      pipeline:
        - type: LoadImageFromFile
          key: gt
        - type: Crop
          keys: [gt]
          crop_size: [256, 256]
          is_pad_zeros: true
          random_crop: false
        - type: PackInputs
    batch_size: 16
    num_workers: 4
    persistent_workers: true
    sampler:
      type: DefaultSampler
      shuffle: false
    
# Optimizer configuration
train:
  max_steps: 300000
  val_check_interval: 100

optimizer:
  generator_steps: 1
  discriminator_steps: 1
  use_ema: true
  ema_decay: 0.999
  ema_start: 1000
  generator:
    optimizer:
      type: Adam
      lr: 0.0001
      betas: [0.5, 0.999]
  discriminator:
    optimizer:
      type: Adam
      lr: 0.0002
      betas: [0.5, 0.999]

logging:
  log_dir: work_dirs/vae_adversarial
  experiment_name: vae_adversarial
  log_every_n_steps: 100

checkpoint:
  save_best_metric: 'val_psnr'  # Metric to monitor for saving best models
  save_best_mode: 'max'         # 'max' for metrics like accuracy/PSNR, 'min' for losses
  save_top_k: 3                 # Number of best checkpoints to keep
  save_last: true               # Whether to save the last checkpoint

# Hooks configuration
default_hooks:
  checkpoint:
    save_best: MAE
    rule: less
  timer:
    type: IterTimerHook
  logger:
    type: LoggerHook
    interval: 100
  param_scheduler:
    type: ParamSchedulerHook
  sampler_seed:
    type: DistSamplerSeedHook

# Evaluation configuration
val_evaluator:
  metrics: 
    - type: MAE
    - type: PSNR
    - type: SSIM

test_cfg: null
test_evaluator: null

# Visualization configuration
visualization:
  vis_backends:
    - type: LocalVisBackend
  visualizer:
    type: ConcatImageVisualizer
    vis_backends: ${visualization.vis_backends}
    fn_key: gt_path
    img_keys: [gt_img, pred_img]
    bgr2rgb: true
  custom_hooks:
    - type: BasicVisualizationHook
      interval: 1