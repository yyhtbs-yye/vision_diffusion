model:
  type: FlowMatchingModel
  
  in_channels: 3           # RGB channels

  unet_config:
    sample_size: [64, 64]  # Full image size
    down_block_types: ['DownBlock2D', 'DownBlock2D', 'DownBlock2D', 'AttnDownBlock2D']
    up_block_types: ['AttnUpBlock2D', 'UpBlock2D', 'UpBlock2D', 'UpBlock2D']
    block_out_channels: [128, 256, 512, 512]
    layers_per_block: 2
    attention_head_dim: 8
    norm_num_groups: 32
    norm_eps: 0.00001
  
# Validation configuration
validation:
  num_vis_samples: 4          # Number of samples to visualize during validation

# Optimizer configuration
train:
  max_epochs: 100
  val_check_interval: 50
  optimizer:
    learning_rate: 0.0001
    betas: [0.9, 0.999]
    weight_decay: 0.0
    use_ema: true
    ema_decay: 0.999
    ema_start: 1000

# Data configuration
data:
  # Training dataloader configuration
  train_dataloader:
    dataset:
      type: NewImageDataset
      paths:
        gt: datasets/ffhq/ffhq_imgs/ffhq_64
      data_prefix:
        gt: ''
      pipeline:
        - type: LoadImageFromFile
          keys: [gt]
        - type: Normalize
          keys: [gt]
          mean: [0.5, 0.5, 0.5]
          std: [0.5, 0.5, 0.5]
    batch_size: 128
    num_workers: 32
    persistent_workers: true
    sampler:
      type: DefaultSampler
      shuffle: true

  # Validation dataloader configuration
  val_dataloader:
    dataset:
      type: NewImageDataset
      paths:
        gt: datasets/celeba/subsets/celeba_64
      data_prefix:
        gt: ''
      pipeline:
        - type: LoadImageFromFile
          keys: [gt]
        - type: Normalize
          keys: [gt]
          mean: [0.5, 0.5, 0.5]
          std: [0.5, 0.5, 0.5]
    batch_size: 128
    num_workers: 32
    persistent_workers: true
    sampler:
      type: DefaultSampler
      shuffle: true

# Logging configuration
logging:
  log_dir: work_dirs/flow_matching
  experiment_name: flow_matching_model_64
  log_every_n_steps: 50

# Checkpoint configuration
checkpoint:
  save_best_metric: 'val/img_mse'  # Metric to monitor
  save_best_mode: 'min'             # 'min' for loss metrics
  save_top_k: 3                     # Number of best checkpoints to keep
  save_last: true                   # Whether to save the last checkpoint

# Visualization configuration, not implemented yet (now manually)
visualization:
  vis_backends:
    - type: LocalVisBackend
  visualizer:
    type: ConcatImageVisualizer
    vis_backends: ${visualization.vis_backends}
    fn_key: gt_path
    img_keys: [gt_img, pred_img]
    bgr2rgb: true
  custom_hooks:
    - type: BasicVisualizationHook
      interval: 1